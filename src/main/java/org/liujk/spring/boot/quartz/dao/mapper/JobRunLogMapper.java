package org.liujk.spring.boot.quartz.dao.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.liujk.spring.boot.quartz.dao.model.JobRunLog;
import org.liujk.spring.boot.quartz.dao.model.JobRunLogExample;

public interface JobRunLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    int countByExample(JobRunLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    int deleteByExample(JobRunLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    @Delete({
        "delete from job_run_log",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    @Insert({
        "insert into job_run_log (id, job_id, ",
        "job_name, group_name, ",
        "job_param, start_time, ",
        "end_time, status, ",
        "remark, invoke_url, ",
        "created_at, created_by, ",
        "updated_at, updated_by, ",
        "is_delete)",
        "values (#{id,jdbcType=BIGINT}, #{jobId,jdbcType=BIGINT}, ",
        "#{jobName,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, ",
        "#{jobParam,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, ",
        "#{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, ",
        "#{remark,jdbcType=VARCHAR}, #{invokeUrl,jdbcType=VARCHAR}, ",
        "#{createdAt,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, ",
        "#{isDelete,jdbcType=INTEGER})"
    })
    int insert(JobRunLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    int insertSelective(JobRunLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    List<JobRunLog> selectByExample(JobRunLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, job_id, job_name, group_name, job_param, start_time, end_time, status, remark, ",
        "invoke_url, created_at, created_by, updated_at, updated_by, is_delete",
        "from job_run_log",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    JobRunLog selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") JobRunLog record, @Param("example") JobRunLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") JobRunLog record, @Param("example") JobRunLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(JobRunLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_run_log
     *
     * @mbggenerated
     */
    @Update({
        "update job_run_log",
        "set job_id = #{jobId,jdbcType=BIGINT},",
          "job_name = #{jobName,jdbcType=VARCHAR},",
          "group_name = #{groupName,jdbcType=VARCHAR},",
          "job_param = #{jobParam,jdbcType=VARCHAR},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "end_time = #{endTime,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=INTEGER},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "invoke_url = #{invokeUrl,jdbcType=VARCHAR},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP},",
          "created_by = #{createdBy,jdbcType=VARCHAR},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "updated_by = #{updatedBy,jdbcType=VARCHAR},",
          "is_delete = #{isDelete,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(JobRunLog record);
}